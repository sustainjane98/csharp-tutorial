// <auto-generated />
using System;
using ExampleWebApplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExampleWebApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExampleWebApplication.Models.CategoryDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.OwnerDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Gym")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.PokemonCategory", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonsId")
                        .HasColumnType("integer");

                    b.HasKey("CategoriesId", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonCategories");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.PokemonDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.PokemonOwnerDao", b =>
                {
                    b.Property<int>("OwnersId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonsId")
                        .HasColumnType("integer");

                    b.HasKey("OwnersId", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonOwners");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.ReviewDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PokemonDaoId")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<int>("ReviewerDaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PokemonDaoId");

                    b.HasIndex("ReviewerDaoId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.ReviewerDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.OwnerDao", b =>
                {
                    b.HasOne("ExampleWebApplication.Models.Country", "Country")
                        .WithMany("Owners")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.PokemonCategory", b =>
                {
                    b.HasOne("ExampleWebApplication.Models.CategoryDao", "CategoryDao")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExampleWebApplication.Models.PokemonDao", "PokemonDao")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryDao");

                    b.Navigation("PokemonDao");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.PokemonOwnerDao", b =>
                {
                    b.HasOne("ExampleWebApplication.Models.OwnerDao", "OwnerDao")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("OwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExampleWebApplication.Models.PokemonDao", "PokemonDao")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerDao");

                    b.Navigation("PokemonDao");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.ReviewDao", b =>
                {
                    b.HasOne("ExampleWebApplication.Models.PokemonDao", "PokemonDao")
                        .WithMany("Reviews")
                        .HasForeignKey("PokemonDaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExampleWebApplication.Models.ReviewerDao", "ReviewerDao")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerDaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokemonDao");

                    b.Navigation("ReviewerDao");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.CategoryDao", b =>
                {
                    b.Navigation("PokemonCategories");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.Country", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.OwnerDao", b =>
                {
                    b.Navigation("PokemonOwners");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.PokemonDao", b =>
                {
                    b.Navigation("PokemonCategories");

                    b.Navigation("PokemonOwners");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("ExampleWebApplication.Models.ReviewerDao", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
